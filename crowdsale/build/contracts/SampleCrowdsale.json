{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526000600760146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405160c080620034768339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050508282878787854284101515156200009857600080fd5b838310151515620000a857600080fd5b600082111515620000b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000f557600080fd5b6200010e620002f5640100000000026401000000009004565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600181905550826002819055508160048190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050600081111515620001b757600080fd5b806006819055505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000811115156200021057600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200023d62000324565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000290573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050818311151515620002e957600080fd5b50505050505062000346565b60006200030162000335565b604051809103906000f0801580156200031e573d6000803e3d6000fd5b50905090565b604051610abd806200114c83390190565b60405161186d8062001c0983390190565b610df680620003566000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100fc5780633197cbb614610127578063355274ea14610152578063401938831461017d5780634042b66f146101a85780634bb278f3146101d3578063521eb273146101ea57806378e97925146102415780637d3d65221461026c5780638d4e40831461029b5780638da5cb5b146102ca578063b5545a3c14610321578063ec8ac4d814610338578063ecb70fb71461036e578063f2fde38b1461039d578063fbfa77cf146103e0578063fc0c546a14610437575b6100fa3361048e565b005b34801561010857600080fd5b5061011161068f565b6040518082815260200191505060405180910390f35b34801561013357600080fd5b5061013c610695565b6040518082815260200191505060405180910390f35b34801561015e57600080fd5b5061016761069b565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b506101926106a1565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd6106a7565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b506101e86106ad565b005b3480156101f657600080fd5b506101ff610789565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024d57600080fd5b506102566107af565b6040518082815260200191505060405180910390f35b34801561027857600080fd5b506102816107b5565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b06107c4565b604051808215151515815260200191505060405180910390f35b3480156102d657600080fd5b506102df6107d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103366107fd565b005b61036c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048e565b005b34801561037a57600080fd5b50610383610903565b604051808215151515815260200191505060405180910390f35b3480156103a957600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b005b3480156103ec57600080fd5b506103f5610a7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044357600080fd5b5061044c610aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156104cd57600080fd5b6104d5610ac9565b15156104e057600080fd5b3491506104f860045483610aff90919063ffffffff16565b905061050f82600554610b3a90919063ffffffff16565b6005819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105d957600080fd5b505af11580156105ed573d6000803e3d6000fd5b505050506040513d602081101561060357600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361068a610b58565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561070957600080fd5b600760149054906101000a900460ff1615151561072557600080fd5b61072d610903565b151561073857600080fd5b610740610c30565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60006008546005541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561081857600080fd5b6108206107b5565b15151561082c57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b50505050565b60008060065460055410159050610918610d89565b806109205750805b91505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561098257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109be57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654610ae434600554610b3a90919063ffffffff16565b11159050610af0610d95565b8015610af95750805b91505090565b6000806000841415610b145760009150610b33565b8284029050828482811515610b2557fe5b04141515610b2f57fe5b8091505b5092915050565b6000808284019050838110151515610b4e57fe5b8091505092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b5050505050565b610c386107b5565b15610ce057600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b50505050610d7f565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d6657600080fd5b505af1158015610d7a573d6000803e3d6000fd5b505050505b610d87610dc8565b565b60006002544211905090565b60008060006001544210158015610dae57506002544211155b915060003414159050818015610dc15750805b9250505090565b5600a165627a7a7230582032c9a462d09c82be5635a7825a5b770976cc723d13bb1e24b45c4095e95f561b0029608060405234801561001057600080fd5b50604051602080610abd83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100af57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083600281111561010f57fe5b021790555050610999806101246000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d61461009e578063521eb273146100b55780638c52dc411461010c5780638da5cb5b14610123578063c19d93fb1461017a578063cb13cddb146101b3578063f2fde38b1461020a578063f340fa011461024d578063fa89401a14610283575b600080fd5b3480156100aa57600080fd5b506100b36102c6565b005b3480156100c157600080fd5b506100ca610426565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061012161044c565b005b34801561012f57600080fd5b5061013861052d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b5061018f610552565b6040518082600281111561019f57fe5b60ff16815260200191505060405180910390f35b3480156101bf57600080fd5b506101f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610565565b6040518082815260200191505060405180910390f35b34801561021657600080fd5b5061024b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057d565b005b610281600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106d2565b005b34801561028f57600080fd5b506102c4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561032157600080fd5b6000600281111561032e57fe5b600260149054906101000a900460ff16600281111561034957fe5b14151561035557600080fd5b60028060146101000a81548160ff0219169083600281111561037357fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610423573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104a757600080fd5b600060028111156104b457fe5b600260149054906101000a900460ff1660028111156104cf57fe5b1415156104db57600080fd5b6001600260146101000a81548160ff021916908360028111156104fa57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561061457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561072d57600080fd5b6000600281111561073a57fe5b600260149054906101000a900460ff16600281111561075557fe5b14151561076157600080fd5b6107b334600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094f90919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561080857fe5b600260149054906101000a900460ff16600281111561082357fe5b14151561082f57600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108fc573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b600080828401905083811015151561096357fe5b80915050929150505600a165627a7a723058205883431119faf62c229b41556f8ad829d4ba45b41cb85e2c96dd6f102795a130002960806040526000600360146101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117fe8061006f6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100eb57806306fdde031461011a578063095ea7b3146101aa57806318160ddd1461020f57806323b872dd1461023a578063313ce567146102bf57806340c10f19146102f0578063661884631461035557806370a08231146103ba5780637d64bcb4146104115780638da5cb5b1461044057806395d89b4114610497578063a9059cbb14610527578063d73dd6231461058c578063dd62ed3e146105f1578063f2fde38b14610668575b600080fd5b3480156100f757600080fd5b506101006106ab565b604051808215151515815260200191505060405180910390f35b34801561012657600080fd5b5061012f6106be565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016f578082015181840152602081019050610154565b50505050905090810190601f16801561019c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b657600080fd5b506101f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f7565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b506102246107e9565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b506102a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ef565b604051808215151515815260200191505060405180910390f35b3480156102cb57600080fd5b506102d4610bae565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102fc57600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bb3565b604051808215151515815260200191505060405180910390f35b34801561036157600080fd5b506103a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d9b565b604051808215151515815260200191505060405180910390f35b3480156103c657600080fd5b506103fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061102c565b6040518082815260200191505060405180910390f35b34801561041d57600080fd5b50610426611075565b604051808215151515815260200191505060405180910390f35b34801561044c57600080fd5b5061045561113d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a357600080fd5b506104ac611163565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ec5780820151818401526020810190506104d1565b50505050905090810190601f1680156105195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053357600080fd5b50610572600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061119c565b604051808215151515815260200191505060405180910390f35b34801561059857600080fd5b506105d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113c0565b604051808215151515815260200191505060405180910390f35b3480156105fd57600080fd5b50610652600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115bc565b6040518082815260200191505060405180910390f35b34801561067457600080fd5b506106a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611643565b005b600360149054906101000a900460ff1681565b6040805190810160405280601681526020017f53616d706c652043726f776473616c6520546f6b656e0000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561082c57600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561087a57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561090557600080fd5b61095782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179b90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ec82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610abe82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b601281565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1157600080fd5b600360149054906101000a900460ff16151515610c2d57600080fd5b610c42826000546117b490919063ffffffff16565b600081905550610c9a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610eac576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f40565b610ebf838261179b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110d357600080fd5b600360149054906101000a900460ff161515156110ef57600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f534354000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111d957600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561122757600080fd5b61127982600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061130e82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061145182600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116db57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008282111515156117a957fe5b818303905092915050565b60008082840190508381101515156117c857fe5b80915050929150505600a165627a7a72305820688e1637a13fb0409647fac951aaea6bd08362e4232a2cc92325de6749d65ec40029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100fc5780633197cbb614610127578063355274ea14610152578063401938831461017d5780634042b66f146101a85780634bb278f3146101d3578063521eb273146101ea57806378e97925146102415780637d3d65221461026c5780638d4e40831461029b5780638da5cb5b146102ca578063b5545a3c14610321578063ec8ac4d814610338578063ecb70fb71461036e578063f2fde38b1461039d578063fbfa77cf146103e0578063fc0c546a14610437575b6100fa3361048e565b005b34801561010857600080fd5b5061011161068f565b6040518082815260200191505060405180910390f35b34801561013357600080fd5b5061013c610695565b6040518082815260200191505060405180910390f35b34801561015e57600080fd5b5061016761069b565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b506101926106a1565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd6106a7565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b506101e86106ad565b005b3480156101f657600080fd5b506101ff610789565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024d57600080fd5b506102566107af565b6040518082815260200191505060405180910390f35b34801561027857600080fd5b506102816107b5565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b06107c4565b604051808215151515815260200191505060405180910390f35b3480156102d657600080fd5b506102df6107d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103366107fd565b005b61036c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048e565b005b34801561037a57600080fd5b50610383610903565b604051808215151515815260200191505060405180910390f35b3480156103a957600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b005b3480156103ec57600080fd5b506103f5610a7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044357600080fd5b5061044c610aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156104cd57600080fd5b6104d5610ac9565b15156104e057600080fd5b3491506104f860045483610aff90919063ffffffff16565b905061050f82600554610b3a90919063ffffffff16565b6005819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105d957600080fd5b505af11580156105ed573d6000803e3d6000fd5b505050506040513d602081101561060357600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361068a610b58565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561070957600080fd5b600760149054906101000a900460ff1615151561072557600080fd5b61072d610903565b151561073857600080fd5b610740610c30565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60006008546005541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561081857600080fd5b6108206107b5565b15151561082c57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b50505050565b60008060065460055410159050610918610d89565b806109205750805b91505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561098257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109be57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654610ae434600554610b3a90919063ffffffff16565b11159050610af0610d95565b8015610af95750805b91505090565b6000806000841415610b145760009150610b33565b8284029050828482811515610b2557fe5b04141515610b2f57fe5b8091505b5092915050565b6000808284019050838110151515610b4e57fe5b8091505092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b5050505050565b610c386107b5565b15610ce057600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b50505050610d7f565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d6657600080fd5b505af1158015610d7a573d6000803e3d6000fd5b505050505b610d87610dc8565b565b60006002544211905090565b60008060006001544210158015610dae57506002544211155b915060003414159050818015610dc15750805b9250505090565b5600a165627a7a7230582032c9a462d09c82be5635a7825a5b770976cc723d13bb1e24b45c4095e95f561b0029",
  "sourceMap": "1002:628:11:-;;;355:5:8;329:31;;;;;;;;;;;;;;;;;;;;1072:443:11;8:9:-1;5:2;;;30:1;27;20:12;5:2;1072:443:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1280:5;1223:4;1301:10;1313:8;1323:5;1330:7;1325:3:7;1311:10;:17;;1303:26;;;;;;;;1355:10;1343:8;:22;;1335:31;;;;;;;;1388:1;1380:5;:9;1372:18;;;;;;;;1423:1;1404:21;;:7;:21;;;;1396:30;;;;;;;;1441:21;:19;;;:21;;;:::i;:::-;1433:5;;:29;;;;;;;;;;;;;;;;;;1480:10;1468:9;:22;;;;1506:8;1496:7;:18;;;;1527:5;1520:4;:12;;;;1547:7;1538:6;;:16;;;;;;;;;;;;;;;;;;1201:358;;;;346:1:6;339:4;:8;331:17;;;;;;;;360:4;354:3;:10;;;;279:90;509:10:14;501:5;;:18;;;;;;;;;;;;;;;;;;674:1:10;666:5;:9;658:18;;;;;;;;706:6;;;;;;;;;;;690:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:23:10;682:5;;:31;;;;;;;;;;;;;;;;;;726:5;719:4;:12;;;;601:135;1505:4:11;1496:5;:13;;1488:22;;;;;;;;1072:443;;;;;;1002:628;;1519:108;1568:13;1596:26;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1596:26:11;1589:33;;1519:108;:::o;1002:628::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1002:628:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:21:7;1872:10;1862:9;:21::i;:::-;1002:628:11;775:19:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:19:7;;;;;;;;;;;;;;;;;;;;;;;636:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:22:7;;;;;;;;;;;;;;;;;;;;;;;256:18:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:18:6;;;;;;;;;;;;;;;;;;;;;;;484:19:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:19:10;;;;;;;;;;;;;;;;;;;;;;;834:24:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:24:7;;;;;;;;;;;;;;;;;;;;;;;531:157:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;531:157:8;;;;;;702:21:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;702:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;608:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:24:7;;;;;;;;;;;;;;;;;;;;;;;1402:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1402:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;329:31:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:121:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:121:10;;;;;;1931:438:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:135:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;752:135:6;;;;;;;;;;;;;;;;;;;;;;;;;;;834:169:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:169:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:24:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:24:10;;;;;;;;;;;;;;;;;;;;;;;;;;;500:26:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:438;2063:17;2143:14;2023:1;2000:25;;:11;:25;;;;1992:34;;;;;;;;2040:15;:13;:15::i;:::-;2032:24;;;;;;;;2083:9;2063:29;;2160:19;2174:4;;2160:9;:13;;:19;;;;:::i;:::-;2143:36;;2218:24;2232:9;2218;;:13;;:24;;;;:::i;:::-;2206:9;:36;;;;2249:5;;;;;;;;;;;:10;;;2260:11;2273:6;2249:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2249:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2249:31:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2249:31:7;;;;;;;;;;;;;;;;;2312:11;2286:57;;2300:10;2286:57;;;2325:9;2336:6;2286:57;;;;;;;;;;;;;;;;;;;;;;;;2350:14;:12;:14::i;:::-;1931:438;;;:::o;775:19::-;;;;:::o;636:22::-;;;;:::o;256:18:6:-;;;;:::o;484:19:10:-;;;;:::o;834:24:7:-;;;;:::o;531:157:8:-;654:5:14;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;583:11:8;;;;;;;;;;;582:12;574:21;;;;;;;;609:10;:8;:10::i;:::-;601:19;;;;;;;;627:14;:12;:14::i;:::-;647:11;;;;;;;;;;679:4;665:11;;:18;;;;;;;;;;;;;;;;;;531:157::o;702:21:7:-;;;;;;;;;;;;;:::o;608:24::-;;;;:::o;1402:85:10:-;1446:4;1478;;1465:9;;:17;;1458:24;;1402:85;:::o;329:31:8:-;;;;;;;;;;;;;:::o;238:20:14:-;;;;;;;;;;;;;:::o;1049:121:10:-;1093:11;;;;;;;;;;;1085:20;;;;;;;;1120:13;:11;:13::i;:::-;1119:14;1111:23;;;;;;;;1141:5;;;;;;;;;;;:12;;;1154:10;1141:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1141:24:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1141:24:10;;;;1049:121::o;752:135:6:-;793:4;805:15;836:3;;823:9;;:16;;805:34;;852:16;:14;:16::i;:::-;:30;;;;872:10;852:30;845:37;;752:135;;:::o;834:169:14:-;654:5;;;;;;;;;;;640:19;;:10;:19;;;632:28;;;;;;;;930:1;910:22;;:8;:22;;;;902:31;;;;;;;;967:8;939:37;;960:5;;;;;;;;;;;939:37;;;;;;;;;;;;990:8;982:5;;:16;;;;;;;;;;;;;;;;;;834:169;:::o;572:24:10:-;;;;;;;;;;;;;:::o;500:26:7:-;;;;;;;;;;;;;:::o;489:160:6:-;537:4;549:14;594:3;;566:24;580:9;566;;:13;;:24;;;;:::i;:::-;:31;;549:48;;610:21;:19;:21::i;:::-;:34;;;;;635:9;610:34;603:41;;489:160;;:::o;138:173:12:-;196:7;251:9;220:1;215;:6;211:35;;;238:1;231:8;;;;211:35;267:1;263;:5;251:17;;290:1;285;281;:5;;;;;;;;:10;274:18;;;;;;305:1;298:8;;138:173;;;;;;:::o;698:129::-;756:7;771:9;787:1;783;:5;771:17;;806:1;801;:6;;794:14;;;;;;821:1;814:8;;698:129;;;;;:::o;891:86:10:-;930:5;;;;;;;;;;;:13;;;950:9;961:10;930:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:42:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;930:42:10;;;;;891:86::o;1239:159::-;1282:13;:11;:13::i;:::-;1278:89;;;1305:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:13:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:13:10;;;;1278:89;;;1339:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:21:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1339:21:10;;;;1278:89;1373:20;:18;:20::i;:::-;1239:159::o;2860:78:7:-;2901:4;2926:7;;2920:3;:13;2913:20;;2860:78;:::o;2603:206::-;2651:4;2663:17;2723:20;2690:9;;2683:3;:16;;:34;;;;;2710:7;;2703:3;:14;;2683:34;2663:54;;2759:1;2746:9;:14;;2723:37;;2773:12;:31;;;;;2789:15;2773:31;2766:38;;2603:206;;;:::o;884:38:8:-;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"../crowdsale/CappedCrowdsale.sol\";\nimport \"../crowdsale/RefundableCrowdsale.sol\";\nimport \"../token/MintableToken.sol\";\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is MintableToken {\n\n  string public constant name = \"Sample Crowdsale Token\";\n  string public constant symbol = \"SCT\";\n  uint8 public constant decimals = 18;\n\n}\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale {\n\n  function SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet) public\n    CappedCrowdsale(_cap)\n    FinalizableCrowdsale()\n    RefundableCrowdsale(_goal)\n    Crowdsale(_startTime, _endTime, _rate, _wallet)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n\n  function createTokenContract() internal returns (MintableToken) {\n    return new SampleCrowdsaleToken();\n  }\n\n}\n",
  "sourcePath": "F:\\smartContract\\crowdsale\\contracts\\examples\\SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/F/smartContract/crowdsale/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        1332
      ],
      "SampleCrowdsaleToken": [
        1281
      ]
    },
    "id": 1333,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1266,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/crowdsale/CappedCrowdsale.sol",
        "file": "../crowdsale/CappedCrowdsale.sol",
        "id": 1267,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 729,
        "src": "26:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/crowdsale/RefundableCrowdsale.sol",
        "file": "../crowdsale/RefundableCrowdsale.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 1265,
        "src": "69:46:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/token/MintableToken.sol",
        "file": "../token/MintableToken.sol",
        "id": 1269,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 1769,
        "src": "116:36:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1270,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1768,
              "src": "329:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1768",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1271,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:11"
          }
        ],
        "contractDependencies": [
          1515,
          1601,
          1644,
          1673,
          1768,
          2014
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 1281,
        "linearizedBaseContracts": [
          1281,
          1768,
          1515,
          2014,
          1601,
          1644,
          1673
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1274,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "348:54:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "348:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 1273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:24:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1277,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "406:37:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1275,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "406:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 1276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1280,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "447:35:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1278,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "447:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1279,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "480:2:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 1333,
        "src": "296:190:11"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1282,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 728,
              "src": "1030:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$728",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1283,
            "nodeType": "InheritanceSpecifier",
            "src": "1030:15:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1284,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1264,
              "src": "1047:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1264",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1285,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:11"
          }
        ],
        "contractDependencies": [
          728,
          988,
          940,
          1264,
          1281,
          1515
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1332,
        "linearizedBaseContracts": [
          1332,
          1264,
          988,
          1515,
          728,
          940
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "1341:174:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1315,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1496:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1316,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "1505:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1496:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3289,
                        3290
                      ],
                      "referencedDeclaration": 3289,
                      "src": "1488:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:22:11"
                }
              ]
            },
            "documentation": null,
            "id": 1321,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1300,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "1223:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1301,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1299,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 728,
                  "src": "1207:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$728_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1207:21:11"
              },
              {
                "arguments": [],
                "id": 1303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1302,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 988,
                  "src": "1233:20:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$988_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1233:22:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1305,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1293,
                    "src": "1280:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1304,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1264,
                  "src": "1260:19:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1264_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1260:26:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1308,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1287,
                    "src": "1301:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1309,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1289,
                    "src": "1313:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1310,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1291,
                    "src": "1323:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1311,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1297,
                    "src": "1330:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1312,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1307,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 940,
                  "src": "1291:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$940_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1291:47:11"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1097:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1117:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1135:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1150:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1165:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1179:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1096:99:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:0:11"
            },
            "scope": 1332,
            "src": "1072:443:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1583:44:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1596:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SampleCrowdsaleToken_$1281_$",
                        "typeString": "function () returns (contract SampleCrowdsaleToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1326,
                        "name": "SampleCrowdsaleToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1281,
                        "src": "1600:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1281",
                          "typeString": "contract SampleCrowdsaleToken"
                        }
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1281",
                      "typeString": "contract SampleCrowdsaleToken"
                    }
                  },
                  "functionReturnParameters": 1325,
                  "id": 1329,
                  "nodeType": "Return",
                  "src": "1589:33:11"
                }
              ]
            },
            "documentation": null,
            "id": 1331,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1568:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1768",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1323,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1768,
                    "src": "1568:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1768",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1567:15:11"
            },
            "scope": 1332,
            "src": "1519:108:11",
            "stateMutability": "nonpayable",
            "superFunction": 826,
            "visibility": "internal"
          }
        ],
        "scope": 1333,
        "src": "1002:628:11"
      }
    ],
    "src": "0:1631:11"
  },
  "legacyAST": {
    "absolutePath": "/F/smartContract/crowdsale/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        1332
      ],
      "SampleCrowdsaleToken": [
        1281
      ]
    },
    "id": 1333,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1266,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/crowdsale/CappedCrowdsale.sol",
        "file": "../crowdsale/CappedCrowdsale.sol",
        "id": 1267,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 729,
        "src": "26:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/crowdsale/RefundableCrowdsale.sol",
        "file": "../crowdsale/RefundableCrowdsale.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 1265,
        "src": "69:46:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/smartContract/crowdsale/contracts/token/MintableToken.sol",
        "file": "../token/MintableToken.sol",
        "id": 1269,
        "nodeType": "ImportDirective",
        "scope": 1333,
        "sourceUnit": 1769,
        "src": "116:36:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1270,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1768,
              "src": "329:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1768",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1271,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:11"
          }
        ],
        "contractDependencies": [
          1515,
          1601,
          1644,
          1673,
          1768,
          2014
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 1281,
        "linearizedBaseContracts": [
          1281,
          1768,
          1515,
          2014,
          1601,
          1644,
          1673
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1274,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "348:54:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "348:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 1273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:24:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1277,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "406:37:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1275,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "406:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 1276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:5:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1280,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1281,
            "src": "447:35:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1278,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "447:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1279,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "480:2:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 1333,
        "src": "296:190:11"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1282,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 728,
              "src": "1030:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$728",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1283,
            "nodeType": "InheritanceSpecifier",
            "src": "1030:15:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1284,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1264,
              "src": "1047:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1264",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1285,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:19:11"
          }
        ],
        "contractDependencies": [
          728,
          988,
          940,
          1264,
          1281,
          1515
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1332,
        "linearizedBaseContracts": [
          1332,
          1264,
          988,
          1515,
          728,
          940
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "1341:174:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1315,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1496:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1316,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "1505:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1496:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3289,
                        3290
                      ],
                      "referencedDeclaration": 3289,
                      "src": "1488:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:22:11"
                }
              ]
            },
            "documentation": null,
            "id": 1321,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1300,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "1223:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1301,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1299,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 728,
                  "src": "1207:15:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$728_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1207:21:11"
              },
              {
                "arguments": [],
                "id": 1303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1302,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 988,
                  "src": "1233:20:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$988_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1233:22:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1305,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1293,
                    "src": "1280:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1304,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1264,
                  "src": "1260:19:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1264_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1260:26:11"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1308,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1287,
                    "src": "1301:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1309,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1289,
                    "src": "1313:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1310,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1291,
                    "src": "1323:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1311,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1297,
                    "src": "1330:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1312,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1307,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 940,
                  "src": "1291:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$940_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1291:47:11"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1097:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1117:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1135:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1150:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1165:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1179:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1096:99:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:0:11"
            },
            "scope": 1332,
            "src": "1072:443:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1583:44:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1596:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SampleCrowdsaleToken_$1281_$",
                        "typeString": "function () returns (contract SampleCrowdsaleToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1326,
                        "name": "SampleCrowdsaleToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1281,
                        "src": "1600:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1281",
                          "typeString": "contract SampleCrowdsaleToken"
                        }
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SampleCrowdsaleToken_$1281",
                      "typeString": "contract SampleCrowdsaleToken"
                    }
                  },
                  "functionReturnParameters": 1325,
                  "id": 1329,
                  "nodeType": "Return",
                  "src": "1589:33:11"
                }
              ]
            },
            "documentation": null,
            "id": 1331,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1568:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1768",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1323,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1768,
                    "src": "1568:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1768",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1567:15:11"
            },
            "scope": 1332,
            "src": "1519:108:11",
            "stateMutability": "nonpayable",
            "superFunction": 826,
            "visibility": "internal"
          }
        ],
        "scope": 1333,
        "src": "1002:628:11"
      }
    ],
    "src": "0:1631:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x2c2b9c9a4a25e24b174f26114e8926a9f2128fe4",
      "transactionHash": "0x99147ec36e7c2b562bbacc6c1919fd87629fc81b7f49b8a8d2dd5b4cbeb5ae45"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-14T08:37:34.650Z"
}